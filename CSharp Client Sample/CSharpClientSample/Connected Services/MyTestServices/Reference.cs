// AUTO GENERATED
//     This code was generated by signalgo add refenreces.
//     Runtime Version : 4.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     to download signalgo vsix for visual studio go https://marketplace.visualstudio.com/items?itemName=AliVisualStudio.SignalGoExtension
//     support and use signalgo go https://github.com/SignalGo/SignalGo-full-net
// AUTO GENERATED
using SignalGo.Shared.DataTypes;
using System.Threading.Tasks;
using SignalGo.Shared.Models;
using System;
using MyTestServices.Interfaces;
using MyTestServices.ServerServices;
using MyTestServices.HttpServices;
using MyTestServices.ClientServices;
namespace MyTestServices.Interfaces
{

    [ServiceContract("helloworldserverservice", ServiceType.ServerService, InstanceType.SingleInstance)]
    public partial interface IHelloWorldService
    {
        string Login(string yourName);
        Task<string> LoginAsync(string yourName);
        System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo> GetUserInfoes();
        Task<System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo>> GetUserInfoesAsync();
        string Hello();
        Task<string> HelloAsync();
        string CallClientService(string name, string family);
        Task<string> CallClientServiceAsync(string name, string family);
    }
}

namespace MyTestServices.ServerServices
{
    [ServiceContract("helloworldserverservice",ServiceType.ServerService, InstanceType.SingleInstance)]
    public partial class HelloWorldService : IHelloWorldService
    {
        private SignalGo.Client.ClientProvider CurrentProvider { get; set; }
        string ServiceName { get; set; }
        public HelloWorldService(SignalGo.Client.ClientProvider clientProvider)
        {
            CurrentProvider = clientProvider;
            ServiceName = this.GetType().GetServerServiceName(true);
        }
        public string Login(string yourName)
        {
                return  SignalGo.Client.ClientManager.ConnectorExtensions.SendDataSync<string>(CurrentProvider, ServiceName,"Login", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(yourName),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(yourName) },
                });
        }
        public Task<string> LoginAsync(string yourName)
        {
                return SignalGo.Client.ClientManager.ConnectorExtensions.SendDataAsync<string>(CurrentProvider, ServiceName,"Login", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(yourName),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(yourName) },
                });
        }
        public System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo> GetUserInfoes()
        {
                return  SignalGo.Client.ClientManager.ConnectorExtensions.SendDataSync<System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo>>(CurrentProvider, ServiceName,"GetUserInfoes", new SignalGo.Shared.Models.ParameterInfo[]
                {
                });
        }
        public Task<System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo>> GetUserInfoesAsync()
        {
                return SignalGo.Client.ClientManager.ConnectorExtensions.SendDataAsync<System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo>>(CurrentProvider, ServiceName,"GetUserInfoes", new SignalGo.Shared.Models.ParameterInfo[]
                {
                });
        }
        public string Hello()
        {
                return  SignalGo.Client.ClientManager.ConnectorExtensions.SendDataSync<string>(CurrentProvider, ServiceName,"Hello", new SignalGo.Shared.Models.ParameterInfo[]
                {
                });
        }
        public Task<string> HelloAsync()
        {
                return SignalGo.Client.ClientManager.ConnectorExtensions.SendDataAsync<string>(CurrentProvider, ServiceName,"Hello", new SignalGo.Shared.Models.ParameterInfo[]
                {
                });
        }
        public string CallClientService(string name, string family)
        {
                return  SignalGo.Client.ClientManager.ConnectorExtensions.SendDataSync<string>(CurrentProvider, ServiceName,"CallClientService", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(name),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(name) },
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(family),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(family) },
                });
        }
        public Task<string> CallClientServiceAsync(string name, string family)
        {
                return SignalGo.Client.ClientManager.ConnectorExtensions.SendDataAsync<string>(CurrentProvider, ServiceName,"CallClientService", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(name),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(name) },
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(family),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(family) },
                });
        }
    }
}

namespace MyTestServices.StreamServices
{
}

namespace MyTestServices.OneWayServices
{
}

namespace MyTestServices.HttpServices
{
    public partial class HelloWorldService : IHelloWorldService
    {
        public HelloWorldService(string serverUrl, SignalGo.Client.HttpClient httpClient = null)
        {
            _serverUrl = serverUrl;
            _httpClient = httpClient;
            if (_httpClient == null)
                _httpClient = new SignalGo.Client.HttpClient();
        }

        private readonly string _serverUrl = null;
        private SignalGo.Client.HttpClient _httpClient;
        public SignalGo.Shared.Http.WebHeaderCollection RequestHeaders
        {
            get
            {
                return _httpClient.RequestHeaders;
            }
            set
            {
                _httpClient.RequestHeaders = value;
            }
        }

        public SignalGo.Shared.Http.WebHeaderCollection ResponseHeaders { get; set; }
        public System.Net.HttpStatusCode Status { get; set; }
        public static HelloWorldService Current { get; set; }
        public string Login(string yourName)
        {
                SignalGo.Client.HttpClientResponse result = _httpClient.Post(_serverUrl + (_serverUrl.EndsWith("/") ? "" : "/") + "helloworld/Login", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(yourName),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(yourName) },
                });
                ResponseHeaders = result.ResponseHeaders;
                Status = result.Status;
                if (Status == System.Net.HttpStatusCode.InternalServerError)
                        throw new Exception(result.Data);
                return SignalGo.Client.ClientSerializationHelper.DeserializeObject<string>(result.Data);
        }
        public async Task<string> LoginAsync(string yourName)
        {
                SignalGo.Client.HttpClientResponse result = await _httpClient.PostAsync(_serverUrl + (_serverUrl.EndsWith("/") ? "" : "/") + "helloworld/Login", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(yourName),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(yourName) },
                });
                ResponseHeaders = result.ResponseHeaders;
                Status = result.Status;
                if (Status == System.Net.HttpStatusCode.InternalServerError)
                        throw new Exception(result.Data);
                return SignalGo.Client.ClientSerializationHelper.DeserializeObject<string>(result.Data);
        }
        public System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo> GetUserInfoes()
        {
                SignalGo.Client.HttpClientResponse result = _httpClient.Post(_serverUrl + (_serverUrl.EndsWith("/") ? "" : "/") + "helloworld/GetUserInfoes", new SignalGo.Shared.Models.ParameterInfo[]
                {
                });
                ResponseHeaders = result.ResponseHeaders;
                Status = result.Status;
                if (Status == System.Net.HttpStatusCode.InternalServerError)
                        throw new Exception(result.Data);
                return SignalGo.Client.ClientSerializationHelper.DeserializeObject<System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo>>(result.Data);
        }
        public async Task<System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo>> GetUserInfoesAsync()
        {
                SignalGo.Client.HttpClientResponse result = await _httpClient.PostAsync(_serverUrl + (_serverUrl.EndsWith("/") ? "" : "/") + "helloworld/GetUserInfoes", new SignalGo.Shared.Models.ParameterInfo[]
                {
                });
                ResponseHeaders = result.ResponseHeaders;
                Status = result.Status;
                if (Status == System.Net.HttpStatusCode.InternalServerError)
                        throw new Exception(result.Data);
                return SignalGo.Client.ClientSerializationHelper.DeserializeObject<System.Collections.Generic.List<SignalGoServerExample.Models.UserInfo>>(result.Data);
        }
        public string Hello()
        {
                SignalGo.Client.HttpClientResponse result = _httpClient.Post(_serverUrl + (_serverUrl.EndsWith("/") ? "" : "/") + "helloworld/Hello", new SignalGo.Shared.Models.ParameterInfo[]
                {
                });
                ResponseHeaders = result.ResponseHeaders;
                Status = result.Status;
                if (Status == System.Net.HttpStatusCode.InternalServerError)
                        throw new Exception(result.Data);
                return SignalGo.Client.ClientSerializationHelper.DeserializeObject<string>(result.Data);
        }
        public async Task<string> HelloAsync()
        {
                SignalGo.Client.HttpClientResponse result = await _httpClient.PostAsync(_serverUrl + (_serverUrl.EndsWith("/") ? "" : "/") + "helloworld/Hello", new SignalGo.Shared.Models.ParameterInfo[]
                {
                });
                ResponseHeaders = result.ResponseHeaders;
                Status = result.Status;
                if (Status == System.Net.HttpStatusCode.InternalServerError)
                        throw new Exception(result.Data);
                return SignalGo.Client.ClientSerializationHelper.DeserializeObject<string>(result.Data);
        }
        public string CallClientService(string name, string family)
        {
                SignalGo.Client.HttpClientResponse result = _httpClient.Post(_serverUrl + (_serverUrl.EndsWith("/") ? "" : "/") + "helloworld/CallClientService", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(name),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(name) },
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(family),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(family) },
                });
                ResponseHeaders = result.ResponseHeaders;
                Status = result.Status;
                if (Status == System.Net.HttpStatusCode.InternalServerError)
                        throw new Exception(result.Data);
                return SignalGo.Client.ClientSerializationHelper.DeserializeObject<string>(result.Data);
        }
        public async Task<string> CallClientServiceAsync(string name, string family)
        {
                SignalGo.Client.HttpClientResponse result = await _httpClient.PostAsync(_serverUrl + (_serverUrl.EndsWith("/") ? "" : "/") + "helloworld/CallClientService", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(name),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(name) },
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(family),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(family) },
                });
                ResponseHeaders = result.ResponseHeaders;
                Status = result.Status;
                if (Status == System.Net.HttpStatusCode.InternalServerError)
                        throw new Exception(result.Data);
                return SignalGo.Client.ClientSerializationHelper.DeserializeObject<string>(result.Data);
        }
    }
}

namespace MyTestServices.ClientServices
{
    [ServiceContract("hellocallbackclientservice", ServiceType.ClientService, InstanceType.SingleInstance)]
    public partial interface IIHelloCallbackClientService
    {
        void ReceivedMessageAsync(string name, string family);
    }
}

namespace SignalGoServerExample.Models
{
    public partial class UserInfo : SignalGo.Shared.Models.NotifyPropertyChangedBase
    {
        private int _Id;
        public int Id
        {
                get
                {
                        return _Id;
                }
                set
                {
                        _Id = value;
                        OnPropertyChanged(nameof(Id));
                }
        }

        private string _Name;
        public string Name
        {
                get
                {
                        return _Name;
                }
                set
                {
                        _Name = value;
                        OnPropertyChanged(nameof(Name));
                }
        }

        private int _Age;
        public int Age
        {
                get
                {
                        return _Age;
                }
                set
                {
                        _Age = value;
                        OnPropertyChanged(nameof(Age));
                }
        }

        private System.Collections.Generic.List<SignalGoServerExample.Models.BookInfo> _Books;
        public System.Collections.Generic.List<SignalGoServerExample.Models.BookInfo> Books
        {
                get
                {
                        return _Books;
                }
                set
                {
                        _Books = value;
                        OnPropertyChanged(nameof(Books));
                }
        }


    }

    public partial class BookInfo : SignalGo.Shared.Models.NotifyPropertyChangedBase
    {
        private int _Id;
        public int Id
        {
                get
                {
                        return _Id;
                }
                set
                {
                        _Id = value;
                        OnPropertyChanged(nameof(Id));
                }
        }

        private string _Details;
        public string Details
        {
                get
                {
                        return _Details;
                }
                set
                {
                        _Details = value;
                        OnPropertyChanged(nameof(Details));
                }
        }

        private SignalGoServerExample.Models.UserInfo _UserInfo;
        public SignalGoServerExample.Models.UserInfo UserInfo
        {
                get
                {
                        return _UserInfo;
                }
                set
                {
                        _UserInfo = value;
                        OnPropertyChanged(nameof(UserInfo));
                }
        }


    }

}

