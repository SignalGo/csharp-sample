// AUTO GENERATED
//     This code was generated by signalgo add refenreces.
//     Runtime Version : 4.6.3.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     to download signalgo vsix for visual studio go https://marketplace.visualstudio.com/items?itemName=AliVisualStudio.SignalGoExtension
//     support and use signalgo go https://github.com/SignalGo/SignalGo-full-net
// AUTO GENERATED
using SignalGo.Shared.DataTypes;
using System.Threading.Tasks;
using SignalGo.Shared.Models;
using ServerServices.Interfaces;
using ServerServices.ServerServices;
using ServerServices.HttpServices;
using ServerServices.ClientServices;
using System;
namespace ServerServices.Interfaces
{

    [ServiceContract("chatserverservice", ServiceType.ServerService, InstanceType.SingleInstance)]
    public partial interface IChatService
    {
        string SendToAll(string message);
        Task<string> SendToAllAsync(string message);
    }
}

namespace ServerServices.ServerServices
{
    [ServiceContract("chatserverservice",ServiceType.ServerService, InstanceType.SingleInstance)]
    public partial class ChatService : IChatService
    {
        private SignalGo.Client.ClientProvider CurrentProvider { get; set; }
        string ServiceName { get; set; }
        public ChatService(SignalGo.Client.ClientProvider clientProvider)
        {
            CurrentProvider = clientProvider;
            ServiceName = this.GetType().GetServerServiceName(true);
        }
        public string SendToAll(string message)
        {
                return  SignalGo.Client.ClientManager.ConnectorExtensions.SendDataSync<string>(CurrentProvider, ServiceName,"SendToAll", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(message),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(message) },
                });
        }
        public Task<string> SendToAllAsync(string message)
        {
                return SignalGo.Client.ClientManager.ConnectorExtensions.SendDataAsync<string>(CurrentProvider, ServiceName,"SendToAll", new SignalGo.Shared.Models.ParameterInfo[]
                {
                         new  SignalGo.Shared.Models.ParameterInfo() { Name = nameof(message),Value = SignalGo.Client.ClientSerializationHelper.SerializeObject(message) },
                });
        }
    }
}

namespace ServerServices.StreamServices
{
}

namespace ServerServices.OneWayServices
{
}

namespace ServerServices.HttpServices
{
}

namespace ServerServices.ClientServices
{
    [ServiceContract("clientchatclientservice", ServiceType.ClientService, InstanceType.SingleInstance)]
    public partial interface IClientChatService
    {
        void OnMessage(string message);
    }
}

