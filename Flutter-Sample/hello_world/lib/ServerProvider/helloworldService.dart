// AUTO GENERATED
//     This code was generated by signalgo add refenreces.
//     Runtime Version : 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     to download signalgo vsix for visual studio go https://marketplace.visualstudio.com/items?itemName=AliVisualStudio.SignalGoExtension
//     support and use signalgo go https://github.com/SignalGo/SignalGo-full-net
// AUTO GENERATED
import 'package:hello_world/ServerProvider/SignalGoServerExample.Models/UserInfo.dart';

import 'package:hello_world/ServerProvider/PostJsonToServerService.dart';
    abstract class HelloworldServiceBase { 
         Future<String> login(String yourName);
         Future<String> loginTimmeMethod();
         Future<List<UserInfo>> getUserInfoes();
         Future<String> hello();
         Future<String> callClientService(String name, String family);
    }
    class HelloworldService implements HelloworldServiceBase { 
static HelloworldServiceBase current;
         Future<String> login(String yourName) {
return PostJsonToServerService.post<String>('Helloworld/Login', {
                        "yourName":yourName
                });
        }

         Future<String> loginTimmeMethod() {
return PostJsonToServerService.post<String>('Helloworld/LoginTimmeMethod',null
);
        }

         Future<List<UserInfo>> getUserInfoes() {
return PostJsonToServerService.post<List<UserInfo>>('Helloworld/GetUserInfoes',null
);
        }

         Future<String> hello() {
return PostJsonToServerService.post<String>('Helloworld/Hello',null
);
        }

         Future<String> callClientService(String name, String family) {
return PostJsonToServerService.post<String>('Helloworld/CallClientService', {
                        "name":name
,                         "family":family
                });
        }

    }
    class HelloworldServiceDuplex implements HelloworldServiceBase { 
static HelloworldServiceBase current;
         Future<String> login(String yourName) {
return PostJsonToServerService.send<String>('Helloworld','Login', {
                        "yourName":yourName
                });
        }

         Future<String> loginTimmeMethod() {
return PostJsonToServerService.send<String>('Helloworld','LoginTimmeMethod',null
);
        }

         Future<List<UserInfo>> getUserInfoes() {
return PostJsonToServerService.send<List<UserInfo>>('Helloworld','GetUserInfoes',null
);
        }

         Future<String> hello() {
return PostJsonToServerService.send<String>('Helloworld','Hello',null
);
        }

         Future<String> callClientService(String name, String family) {
return PostJsonToServerService.send<String>('Helloworld','CallClientService', {
                        "name":name
,                         "family":family
                });
        }

    }
